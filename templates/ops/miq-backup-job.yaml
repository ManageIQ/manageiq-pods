apiVersion: v1
kind: Template
metadata:
  name: database-backup
objects:
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgresql-backup
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: "${DATABASE_BACKUP_VOLUME_CAPACITY}"
- apiVersion: batch/v1
  kind: Job
  metadata:
    name: database-backup-${ID}
  spec:
    template:
      metadata:
        name: database-backup-${ID}
      spec:
        containers:
        - name: postgresql
          image: docker.io/manageiq/postgresql:10
          command:
          - "/opt/manageiq/container-scripts/backup_db"
          env:
          - name: DATABASE_HOSTNAME
            valueFrom:
              secretKeyRef:
                name: postgresql-secrets
                key: hostname
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: postgresql-secrets
                key: dbname
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql-secrets
                key: password
          - name: DATABASE_PORT
            value: "${DATABASE_PORT}"
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: postgresql-secrets
                key: username
          volumeMounts:
          - name: backup
            mountPath: "/backups"
        volumes:
        - name: backup
          persistentVolumeClaim:
            claimName: postgresql-backup
        restartPolicy: Never
parameters:
- name: DATABASE_BACKUP_VOLUME_CAPACITY
  value: 15Gi
- name: DATABASE_PORT
  value: '5432'
- name: ID
  from: "[a-z0-9]{8}"
  generate: expression
