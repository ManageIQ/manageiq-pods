#!/bin/bash

if [[ -n "$(ls -A /etc/pki/ca-trust/source/anchors)" ]]; then
  # Extract to a tmpdir to avoid: p11-kit: couldn't make directory writable: /etc/pki/ca-trust/extracted/pem/directory-hash: Unknown error 1
  mkdir /tmp/extracted
  update-ca-trust extract -o /tmp/extracted/
  rm -rf /etc/pki/ca-trust/extracted/*
  mv /tmp/extracted/* /etc/pki/ca-trust/extracted/
fi

[[ -s /etc/default/evm ]] && source /etc/default/evm

[[ -f /run/secrets/postgresql/POSTGRESQL_DATABASE ]] && database_name_file=$(cat /run/secrets/postgresql/POSTGRESQL_DATABASE)
database_name=${DATABASE_NAME:-$database_name_file}
database_name=${database_name:-db_unknown}

[[ -f /run/secrets/postgresql/POSTGRESQL_HOSTNAME ]] && database_hostname_file=$(cat /run/secrets/postgresql/POSTGRESQL_HOSTNAME)
database_hostname=${DATABASE_HOSTNAME:-$database_hostname_file}
database_hostname=${database_hostname:-localhost}

[[ -f /run/secrets/postgresql/POSTGRESQL_PASSWORD ]] && database_password_file=$(cat /run/secrets/postgresql/POSTGRESQL_PASSWORD)
database_password=${DATABASE_PASSWORD:-$database_password_file}

[[ -f /run/secrets/postgresql/POSTGRESQL_PORT ]] && database_port_file=$(cat /run/secrets/postgresql/POSTGRESQL_PORT)
database_port=${DATABASE_PORT:-$database_port_file}
database_port=${database_port:-5432}

[[ -f /run/secrets/postgresql/POSTGRESQL_USER ]] && database_username_file=$(cat /run/secrets/postgresql/POSTGRESQL_USER)
database_username=${DATABASE_USERNAME:-$database_username_file}

database_ssl_mode=${DATABASE_SSL_MODE:-prefer}

echo "== Writing database config =="
cat > ${APP_ROOT}/config/database.yml << KEY
---
production:
  adapter: postgresql
  username: ${database_username}
  password: ${database_password}
  host: ${database_hostname}
  database: ${database_name}
  port: ${database_port}
  encoding: utf8
  pool: 5
  wait_timeout: 5
  ssl_mode: ${database_ssl_mode}
KEY

[[ -f /.postgresql/root.crt ]] && echo "  sslrootcert=/.postgresql/root.crt" >> ${APP_ROOT}/config/database.yml

[[ -f /run/secrets/manageiq/application/encryption_key ]] && encryption_key_file=$(cat /run/secrets/manageiq/application/encryption_key)
encryption_key=${ENCRYPTION_KEY:-$encryption_key_file}
echo "== Writing encryption key =="
cat > ${APP_ROOT}/certs/v2_key << KEY
---
:algorithm: aes-256-cbc
:key: ${encryption_key}
KEY

echo "${GUID}" > ${APP_ROOT}/GUID
